%default-border {
  border-width: $border-width-base;
  border-style: solid;
  border-color: $black;
}

.puzzle {
  @include square($puzzle-size);
  @extend %default-border;
  border-width: $border-width-lg;

  @media (min-width: $responsive-breakpoint) {
    @include square($puzzle-size-lg);
  }

  &.puzzle-solved {
    animation: glowing 2s infinite ease-in-out;
  }
}

.puzzle-region {
  display: inline-block;
  @include square($puzzle-region-size);
  @extend %default-border;

  @media (min-width: $responsive-breakpoint) {
    @include square($puzzle-region-size-lg);
    border-width: $border-width-lg;
  }
}

.puzzle-square {
  font-size: $font-size-puzzle;
  text-align: center;
  @include square($puzzle-square-size);
  padding: 0;
  background-color: rgba(255,255,255,0.75);
  @extend %default-border;
  border-radius: 0;
  outline: 0;
  cursor: pointer;
  transition: transform    100ms ease-in-out,
              border-color 300ms ease-in-out,
              color        300ms ease-in-out;

  &::selection {
    background-color: rgba(0,0,0,0);
  }

  &[readonly] {
    font-weight: bold;
    z-index: 1;
    cursor: default;
  }

  &:not([readonly]):hover {
    background-color: #fff;
    transform: scale3d(1.15, 1.15, 1);
    z-index: 100;
  }

  &:not([readonly]):focus {
    background-color: #fff;
    transform: scale3d(1.4, 1.4, 1);
    z-index: 200;
  }

  &.error {
    border-color: $color-error;
    color:        $color-error;
  }

  @media (min-width: $responsive-breakpoint) {
    font-size: $font-size-puzzle-lg;
    @include square($puzzle-square-size-lg);

    // Can't position this by default since Safari has a weird
    // rendering issue with a positioned and transform:scale3d element.
    // So I'm only positioning it for large viewports (non-mobile a.k.a. non-Safari)
    // The positioning is necessary for the z-indexing to take effect.
    // Trade-offs...
    position: relative;
  }
}

@keyframes glowing {
  0% {
    box-shadow: 0 0 10px  5px rgba(255, 234, 121, 0.5),
                0 0 50px 0px rgba(255, 234, 121, 0.5);
    transform: scale3d(1,1,1);
  }
  50% {
    box-shadow: 0 0 20px  10px rgba(255, 255, 255, 0.5),
                0 0 60px  5px rgba(255, 234, 121, 0.5);
    transform: scale3d(1.01,1.01,1);
  }
  100% {
    box-shadow: 0 0 10px  5px rgba(255, 234, 121, 0.5),
                0 0 50px 0px rgba(255, 234, 121, 0.5);
    transform: scale3d(1,1,1);
  }
}